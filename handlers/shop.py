from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from replys import shop_reply
from handlers.city import router as shop

router = Router()
router.include_router(shop)

shop_text = ('üéÅüî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ '
             '–ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –±–∏–ª–µ—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ª–æ—Ç–µ—Ä–µ–µ–∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ! üè™üí∏\n'
             'üí∞üéâ –ñ–µ–ª–∞–µ–º –≤–∞–º —É–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –∏ –±–æ–ª—å—à–∏—Ö –≤—ã–∏–≥—Ä—ã—à–µ–π! ')


@router.callback_query(F.data == 'back_shop')
async def back_shop(call: CallbackQuery, state: FSMContext):
    await state.clear()
    await call.message.edit_text(shop_text,
                                 reply_markup=shop_reply)


@router.callback_query(F.data == 'shop')
async def shop_main(call: types.CallbackQuery):
    text = '\n'
    if call.message.chat.type != 'private':
        text += ("üü•–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ñ–∞–±—Ä–∏–∫–æ–π –æ–Ω–∏ –±—É–¥—É—Ç *–ø–æ–∫—É–ø–∞—Ç—å—Å—è –¥–ª—è —Ñ–∞–±—Ä–∏–∫–∏ –≥—Ä—É–ø–ø—ã*, "
                 "–¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è *—Å–≤–æ–µ–π —Ñ–∞–±—Ä–∏–∫–∏* –ø–æ–∫—É–ø–∞–π—Ç–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º!!üü•")
    await call.message.edit_text(shop_text + text, reply_markup=shop_reply, parse_mode='Markdown')
