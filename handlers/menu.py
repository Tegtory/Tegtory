from aiogram import Router, types, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import URLInputFile

from Filters import MenuFilter
from MIddleWares.ChatActionMiddleWare import Typing
from States import FindFactory
from bot import bot
from config import not_enough_points, factory_image
from api import api
from replys import menu_reply, mini_game_markup, city_markup

router = Router()
router.message.middleware(Typing())


city_text = '–í—ã –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞'
mini_games_text = ('''
üéÆ –ú–∏–Ω–∏ –∏–≥—Ä—ã üéÆ

üåæ *–§–µ—Ä–º–∞:* –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å 

‚öîÔ∏è *–ò–Ω—Å–ø–µ–∫—Ü–∏—è:*
–ò–Ω—Å–ø–µ–∫—Ç–æ—Ä —Å—Ä–∞–≤–Ω–∏—Ç —Ç–≤–æ—é —Ñ–∞–±—Ä–∏–∫—É —Å —Ñ–∞–±—Ä–∏–∫–æ–π –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ä–µ–π—Ç–∏–Ω–≥

üé≤ *–ë–∏—Ä–∂–∞:*
–í–ª–æ–∂–∏—Ç–µ—Å—å –≤ —Ç–æ–≤–∞—Ä –∏ —É–∑–Ω–∞–π—Ç–µ –≤—ã—Ä–æ—Å—Ç–µ—Ç –ª–∏ –æ–Ω –≤ —Ü–µ–Ω–µ

üé≤ *–ö–∞–∑–∏–Ω–æ:* @an\_casino\_bot
''')


@router.message(MenuFilter())
async def menu_cmd(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}.', reply_markup=menu_reply)


@router.callback_query(F.data == 'city')
async def back_city(call: types.CallbackQuery):
    await call.message.edit_text(city_text, reply_markup=city_markup)


@router.message(F.text.lower() == '–≥–æ—Ä–æ–¥')
async def city(message: types.Message):
    await message.answer(city_text, reply_markup=city_markup)


@router.message(F.text.lower() == '–º–∏–Ω–∏ –∏–≥—Ä—ã')
async def mini_games_menu(message: types.Message):
    await message.answer(mini_games_text, reply_markup=mini_game_markup, parse_mode='Markdown')


@router.message(F.text.lower() == '–ø–æ–º–æ—â—å')
async def guide(message: types.Message):
    await message.answer('–ì–∞–π–¥ —Å–æ –≤—Å–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º: https://telegra.ph/Obuchenie-Tegtory-08-30')


@router.message(F.text.lower() == '–Ω–∞–π—Ç–∏')
async def find_factory(message: types.Message, state: FSMContext):
    await state.set_state(FindFactory.name)
    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏')


@router.message(StateFilter(FindFactory.name))
async def answer_found_factory(message: types.Message, state: FSMContext):
    factory = api.find_factory(message.text)
    if not factory.exists():
        return await message.answer('–§–∞–±—Ä–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    _type = factory_image(factory.type)
    await message.answer_photo(URLInputFile(_type),
                               f'*{factory.name}:* \n\n'
                               f'üîß *{factory.lvl} —É—Ä–æ–≤–µ–Ω—å*\n'
                               f'‚öôÔ∏è *–¢–∏–ø {factory.type}* \n'
                               f'üöß *–°—Ç–∞—Ç—É—Å {'–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç' if factory.state == 0 else '–†–∞–±–æ—Ç–∞–µ—Ç'}*  \n'
                               f'üë∑‚Äç *{factory.workers} —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤* ')
    await state.clear()


@router.message(F.text.lower().split()[0] == '–ø–µ—Ä–µ–¥–∞—Ç—å')
async def give_money(message: types.Message):
    try:
        _id = str(message.text.split()[1])
        _money = abs(int(message.text.split()[2]))
        player = api.player(message.from_user.id)
    except:
        return await message.answer('–ü—Ä–∏–Ω—Ü–∏–ø –ø–µ—Ä–µ–¥–∞—á–∏ –¥–µ–Ω–µ–≥: –ø–µ—Ä–µ–¥–∞—Ç—å @username 1203')
    if _money > player.money:
        return await message.answer(not_enough_points)
    try:
        player2 = api.player(_id)
        player2.money += _money
        player.money -= _money
    except:
        return await message.answer('–≤–∏–¥–∏–º–æ –≤—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ username')

    await bot.send_message(player2.telegram_id, f'–í–∞–º –ø–µ—Ä–µ–¥–∞–ª–∏ {int(_money):,}')
    await message.answer(f'–£—Å–ø–µ—à–Ω–æ')
    await bot.send_message(1405684214, f'–∫–æ–º—É {_id} {_money} –æ—Ç {message.from_user.username}')
