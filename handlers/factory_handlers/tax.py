from aiogram import types, F, Router

from db.Player import Player
from db.Factory import Factory

from replys import tax_markup
# region TAX

router = Router()
@router.callback_query(F.data == 'tax')
async def check_tax(call: types.CallbackQuery):
    factory = Factory(call.message.chat.id)
    if not factory.exists():
        return await call.message.answer('–£ –≤–∞—Å –Ω–µ—Ç —Ñ–∞–±—Ä–∏–∫–∏ –∞ –∑–Ω–∞—á–∏—Ç –∏ –Ω–∞–ª–æ–≥–æ–≤')
    tax = factory.tax
    await call.message.edit_caption(caption=f'üí∏*–ù–∞–ª–æ–≥–∏ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É:*\n\n'
                            f'üí∏*–ù–∞–ª–æ–≥–∏ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ:* {round(tax * 0.05, 3)} –æ—á–∫–æ–≤ \n'
                            f'üí∏*–ù–∞–ª–æ–≥–∏ –Ω–∞ –ø—Ä–æ–∑–≤–æ–¥—Å—Ç–≤–æ:* {round(tax * 0.15, 3)} –æ—á–∫–æ–≤ \n'
                            f'üí∏*–ù–∞–ª–æ–≥ –Ω–∞ –∑–µ–º–ª—é:* {round(tax * 0.1)}\n'
                            f'üí∏*–ù–∞–ª–æ–≥ –Ω–∞ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:* {round(tax * 0.2)} \n'
                            f'üí∏*–ù–∞–ª–æ–≥ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏:* {round(tax * 0.5)} \n\n'
                            f'üí∏üí∏*–∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –Ω–∞–ª–æ–≥–æ–≤:* {tax}',
                            reply_markup=tax_markup,
                            parse_mode='Markdown')


@router.callback_query(F.data == 'pay_tax')
async def pay_tax(call: types.CallbackQuery):
    player = Player(call.from_user.id)
    if call.message.chat.type == "private":
        factory = Factory(call.from_user.id)
    else:
        factory = Factory(call.message.chat.id)
    if factory.tax == 0:
        return await call.message.answer('–£ –≤–∞—Å –Ω–µ—Ç –Ω–∞–ª–æ–≥–æ–≤')
    elif player.money < factory.tax:
        return await call.message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–æ–≥–∞')
    else:
        player.money -= factory.tax
        factory.tax = 0
        return await check_tax(call)


# endregion