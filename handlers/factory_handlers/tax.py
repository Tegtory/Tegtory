from aiogram import types, F, Router

from db import Factory, Player

from replys import tax_markup, back_factory


router = Router()


@router.callback_query(F.data == 'tax')
async def check_tax(call: types.CallbackQuery):
    factory = Factory(call.message.chat.id)
    if not factory.exists():
        return await call.message.answer('–£ –≤–∞—Å –Ω–µ—Ç —Ñ–∞–±—Ä–∏–∫–∏ –∞ –∑–Ω–∞—á–∏—Ç –∏ –Ω–∞–ª–æ–≥–æ–≤')
    tax = factory.tax
    if factory.tax == 0:
        return await call.message.edit_caption(caption='–£ –≤–∞—Å –Ω–µ—Ç –Ω–∞–ª–æ–≥–æ–≤', reply_markup=back_factory)
    await call.message.edit_caption(caption=f'üí∏*–ù–∞–ª–æ–≥–∏ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É:* {tax}', reply_markup=tax_markup)


@router.callback_query(F.data == 'pay_tax')
async def pay_tax(call: types.CallbackQuery):
    player = Player(call.from_user.id)
    if call.message.chat.type == "private":
        factory = Factory(call.from_user.id)
    else:
        factory = Factory(call.message.chat.id)
    if player.money < factory.tax:
        return await call.message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–æ–≥–∞')
    else:
        player.money -= factory.tax
        factory.tax = 0
        return await check_tax(call)
