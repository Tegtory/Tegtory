from aiogram import Router, types, F
from aiogram.filters import Command

from MIddleWares.UserMiddleWare import UserMiddleWare

from config import clan_lvl, create_clan_text, not_in_clan, not_enough_points

from db.Factory import Factory
from db.Player import Player
from db.leaderboard import Leaderboard

router = Router()
router.message.middleware(UserMiddleWare())


@router.message(F.text.lower() == '–æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ')
async def clan_def(message: types.Message):
    player = Player(message.from_user.id)
    clan = player.clan
    if clan.name == '':
        return await message.answer(not_in_clan, parse_mode='HTML')
    _text = f'üèÜ *–õ–∏–¥–µ—Ä—ã –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è \"{clan.name}\"* üèÜ\n\n'
    _text += str(Leaderboard().Clan(clan.name))
    _text += f'üí∞–í–∫–ª–∞–¥ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ {player.money:,}\n\n'
    if bool(clan.leader):
        _text += 'üëë*–í—ã –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å* —ç—Ç–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è\n'

    _text += (f'\n–ü–æ–∫–∏–Ω—É—Ç—å –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ - */leave*'
              f'\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ - `/join "{clan.name}"`')
    await message.answer(_text, parse_mode='Markdown')


@router.message(Command('leave'))
async def leave_clan_cm(message: types.Message):
    player = Player(message.from_user.id)
    player.clan.name = ''
    player.clan.leader = 0
    await message.answer('–¢—ã –ø–æ–∫–∏–Ω—É–ª –æ–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ')


@router.message(Command('join'))
async def join(message: types.Message):
    factory = Factory(message.from_user.id)
    if factory.level < 10:
        return await message.answer(clan_lvl)
    try:
        name = message.text.split()[1]
    except:
        return await message.answer('–ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è')
    name = name.replace('"', '')
    player = Player(message.from_user.id)
    clan = player.clan
    if clan.name != '':
        return await message.answer('–í—ã —É–∂–µ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏')

    if not clan.exists(name):
        return await message.answer("–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    clan.name = name
    await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏')


@router.message(Command('create_clan'))
async def create_clan(message: types.Message):
    factory = Factory(message.from_user.id)
    player = Player(message.from_user.id)
    if factory.level < 10:
        return await message.answer(clan_lvl)
    try:
        clan_name = message.text.split()[1]
    except:
        return await message.answer(create_clan_text, parse_mode='HTML')

    if not player.clan.can_create(clan_name):
        return await message.answer('–¢–∞–∫–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')

    if len(clan_name) > 100:
        return await message.answer(create_clan_text, parse_mode='HTML')

    if player.clan.name != '':
        return await message.answer('–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏')

    if player.money > 7500:
        player.money -= 7500
        player.clan.name = clan_name
        player.clan.leader = 1
        await message.answer(f'–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –æ–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ {clan_name}')
    else:
        await message.answer(not_enough_points)

# endregion
